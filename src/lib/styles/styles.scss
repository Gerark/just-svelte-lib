@use "sass:color";
@use "sass:list";
@use "sass:map";
@import 'tippy.js/dist/svg-arrow.css';

@mixin create-theme($theme,
    $surface, $onSurface,
    $primary, $onPrimary,
    $secondary, $onSecondary,
	$ternary, $onTernary,
	$success, $onSuccess,
	$warning, $onWarning,
	$error, $onError) {
  :is([data-just-theme=#{$theme}][data-just-theme-mode=light]) {
    @include setup-base-color-theme("surface", $surface, $onSurface, true);
    @include setup-base-color-theme("primary", $primary, $onPrimary, true);
    @include setup-base-color-theme("secondary", $secondary, $onSecondary, true);
    @include setup-base-color-theme("ternary", $ternary, $onTernary, true);
    @include setup-base-color-theme("success", $success, $onSuccess, true);
    @include setup-base-color-theme("warning", $warning, $onWarning, true);
    @include setup-base-color-theme("error", $error, $onError, true);
  }
  :is([data-just-theme=#{$theme}][data-just-theme-mode=dark]) {
    @include setup-base-color-theme("surface", $surface, $onSurface, false);
    @include setup-base-color-theme("primary", $primary, $onPrimary, false);
    @include setup-base-color-theme("secondary", $secondary, $onSecondary, false);
    @include setup-base-color-theme("ternary", $ternary, $onTernary, false);
    @include setup-base-color-theme("success", $success, $onSuccess, false);
    @include setup-base-color-theme("warning", $warning, $onWarning, false);
    @include setup-base-color-theme("error", $error, $onError, false);
  }
  :is([data-just-theme=#{$theme}]) {
    --tjust-bg-color: var(--tjust-surface-d4);
    --tjust-bg-component-color: var(--tjust-surface-d2);
    --tjust-bg-content-color: var(--tjust-surface-d3);
    --tjust-bg-highlighted-text-color: var(--tjust-ternary);
    --tjust-bg-selected-color: #{$primary};
    --tjust-bg-hover-color: var(--tjust-primary-d4);
    --tjust-bg-table-even: var(--tjust-surface-d2);
    --tjust-bg-table-odd: var(--tjust-surface-d3);
    --tjust-txt-default-color: var(--tjust-on-surface);
    --tjust-txt-inactive-color: #{color.adjust($onSurface, $alpha: -0.75)};
    --tjust-txt-selected-color: var(--tjust-on-primary);
    --tjust-txt-highlighted-color: var(--tjust-on-ternary);
    --tjust-sep-color: var(--tjust-surface);
    --tjust-scroll-color: var(--tjust-surface);
    --tjust-scroll-hover-color: var(--tjust-bg-hover-color);
    --tjust-border-default-color: var(--tjust-surface-l1);
    --tjust-border-hover-color: var(--tjust-primary);
    --tjust-border-focus-color: var(--tjust-primary);
    --tjust-border-active-color: var(--tjust-secondary);
    --tjust-bg-treeviewitem-color: transparent;
    --tjust-bg-treeviewitem-hover-color: var(--tjust-bg-hover-color);
    --tjust-bg-treeviewitem-focus-color: var(--tjust-primary);
    --tjust-bg-treeviewitem-focus-text-color: var(--tjust-on-primary);
    --tjust-bg-button-color: var(--tjust-primary);
    --tjust-bg-button-hover-color: var(--tjust-primary-l1);
    --tjust-txt-button-color: var(--tjust-on-primary);
    --tjust-icon-default-color: var(--tjust-on-surface);
    --tjust-icon-hover-color: var(--tjust-primary);
    --tjust-icon-treeviewitem-color: var(--tjust-primary-l3);
    --tjust-checkmark-default-color: var(--tjust-primary);
    --tjust-animation-click-duration: 0.15s;
    --tjust-animation-hover-duration: 0.25s;

    --tjust-font-family: 'Lucida Sans Unicode', serif;
    --tjust-font-size-2xs: 0.625rem;
    --tjust-font-size-xs: 0.75rem; // 12px
    --tjust-font-size-sm: 0.875rem; // 14px
    --tjust-font-size-md: 1rem; //usually 16px
    --tjust-font-size-lg: 1.125rem; // 18px
    --tjust-font-size-xl: 1.5rem; // 24px
    --tjust-font-size-2xl: 2.0rem;

    --tjust-gap-default: 5px;

    --tjust-padding-xs: calc(var(--tjust-font-size-xs) / 4);
    --tjust-padding-sm: calc(var(--tjust-font-size-sm) / 4);
    --tjust-padding-md: calc(var(--tjust-font-size-md) / 4);
    --tjust-padding-lg: calc(var(--tjust-font-size-lg) / 4);
    --tjust-padding-xl: calc(var(--tjust-font-size-xl) / 4);
    --tjust-padding-thick: var(--tjust-padding-sm);
    --tjust-padding-thin: var(--tjust-padding-xs);

    --tjust-border-width: 2px;
    --tjust-border-width-sm: 3px;
    --tjust-border-width-md: 4px;
    --tjust-border-width-lg: 5px;
    --tjust-border-width-xl: 5px;
    --tjust-border-radius: 10px;

    font-family: var(--tjust-font-family);
    font-size: 16px;
    color: var(--tjust-txt-default-color);

    .dragged-item {
      position: absolute;
      z-index: 9000;
      animation: top 0.125s;
    }

    ::-webkit-scrollbar {
      width: 8px;
      border: 0 solid transparent;
      margin: 5px;
    }

    ::-webkit-scrollbar-track {
      border: 0 solid transparent;
      box-shadow: none;
    }

    ::-webkit-scrollbar-track:hover {
      border: 0 solid transparent;
      box-shadow: none;
    }

    ::-webkit-scrollbar-thumb {
      background-color: var(--tjust-scroll-color);
      border: 0 solid transparent;
      box-shadow: none;
    }

    ::-webkit-scrollbar-thumb:hover {
      background-color: var(--tjust-scroll-hover-color);
      border: 0 solid transparent;
      box-shadow: none;
    }

    .just-highlighted-text {
      background: var(--tjust-bg-highlighted-text-color);
      color: var(--tjust-txt-highlighted-color);
    }
  }
}

//Tippyjs tooltip theme

.tippy-box[data-theme='just'][data-animation=fade][data-state=hidden] {
  opacity: 0
}

[data-tippy-root] {
  max-width: calc(100vw - 10px)
}

.tippy-box[data-theme='just'] {
  position: relative;
  background-color: var(--tjust-bg-component-color);
  color: var(--tjust-txt-default-color);
  border-radius: 0;
  font-family: "Lucida Sans", serif;
  font-size: 14px;
  line-height: 1.4;
  white-space: normal;
  outline: 0;
  padding: 5px;
  transition-property: transform, visibility, opacity;
  border: 0 solid #9e9e9e;
  box-shadow: 0 0 20px 1px var(--tjust-bg-color);
}

.tippy-box[data-theme='just'][data-placement^=top] > .tippy-arrow {
  bottom: 0
}

.tippy-box[data-theme='just'][data-placement^=top] > .tippy-arrow:before {
  bottom: -7px;
  left: 0;
  border-width: 8px 8px 0;
  border-top-color: initial;
  transform-origin: center top
}

.tippy-box[data-theme='just'][data-placement^=bottom] > .tippy-arrow {
  top: 0
}

.tippy-box[data-theme='just'][data-placement^=bottom] > .tippy-arrow:before {
  top: -7px;
  left: 0;
  border-width: 0 8px 8px;
  border-bottom-color: initial;
  transform-origin: center bottom
}

.tippy-box[data-theme='just'][data-placement^=left] > .tippy-arrow {
  right: 0
}

.tippy-box[data-theme='just'][data-placement^=left] > .tippy-arrow:before {
  border-width: 8px 0 8px 8px;
  border-left-color: initial;
  right: -7px;
  transform-origin: center left
}

.tippy-box[data-theme='just'][data-placement^=right] > .tippy-arrow {
  left: -10px
}

.tippy-box[data-theme='just'][data-placement^=right] > .tippy-arrow:before {
  left: -7px;
  border-width: 8px 8px 8px 0;
  border-right-color: initial;
  transform-origin: center right
}

.tippy-box[data-theme='just'][data-inertia][data-state=visible] {
  transition-timing-function: cubic-bezier(.54, 1.5, .38, 1.11)
}

.tippy-arrow[data-theme='just'] {
  width: 16px;
  height: 16px;
  color: #9e9e9e00;
}

.tippy-arrow[data-theme='just']:before {
  content: "";
  position: absolute;
  border-color: transparent;
  border-style: solid
}

.tippy-content[data-theme='just'] {
  position: relative;
  z-index: 1
}

.tippy-box[data-theme='just'] .tippy-svg-arrow {
  fill: #383838;
}

.just-tooltip-content {
  padding: 10px;
  background-color: var(--tjust-bg-content-color);
  margin: 0;
  text-align: start;
}


@mixin setup-dark-color-theme($name, $color, $lightness, $useLightTheme) {
  @for $i from 4 through 1 {
    $var: calc(($i * 15 * $lightness) / 100);
    @if $useLightTheme {
      --tjust-#{$name}-l#{$i}: #{darken($color, $var)};
    } @else {
      --tjust-#{$name}-d#{$i}: #{darken($color, $var)};
    }
  }
}

@mixin setup-light-color-theme($name, $color, $lightness, $useLightTheme) {
  @for $i from 1 through 4 {
    $var: calc(($i * 15 * $lightness) / 100);
    @if $useLightTheme {
      --tjust-#{$name}-d#{$i}: #{lighten($color, $var)};
    } @else {
      --tjust-#{$name}-l#{$i}: #{lighten($color, $var)};
    }
  }
}

@mixin setup-base-color-theme($name, $color, $onColor, $useLightTheme) {
  $lightness: color.lightness($color);
  @include setup-dark-color-theme($name, $color, $lightness, $useLightTheme);
  --tjust-#{$name}: #{$color};
  @include setup-light-color-theme($name, $color, $lightness, $useLightTheme);
  --tjust-on-#{$name}: #{$onColor};
}